@inherits LocalizationComponent 
@inject DocumentTypeService _DocumentTypeService
@namespace Moamalat.Components.Basic
<PageTitle>DocumentType List</PageTitle>

<div class="row">
    <div class="col-xl-12">
        <div id="panel-1" class="panel">
            <div class="panel-hdr">
                <h2>DocumentType List</h2>
                <div class="panel-toolbar">
                    <button class="btn btn-panel waves-effect waves-themed" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
                    <button class="btn btn-panel waves-effect waves-themed" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
                    <button class="btn btn-panel waves-effect waves-themed" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
                </div>
            </div>
            <div class="panel-container show">
                <div class="panel-content">
                    @* <div class="panel-tag">

                    </div> *@
                    <!-- datatable start -->
             
                    <QuickGrid Class="table"
                               ItemsProvider="DoFetchDocumentType" Pagination="_paginationState">
                        <PropertyColumn Title="DocumentTypeId" Property="w=>w.DocumentTypeId" />
                        <PropertyColumn Title="DocumentTypeArName" Property="w=>w.DocumentTypeArName" />
                        <PropertyColumn Title="DocumentTypeEnName" Property="w=>w.DocumentTypeEnName" />
                        <TemplateColumn Context="documenttype">
                            <a class="m-1 p-2" href="">
                                Edit
                            </a>
                            <a class="m-1 p-1">
                                Delete
                            </a>
                        </TemplateColumn>
                    </QuickGrid>
                    <Paginator State="@_paginationState" />                   
                    <!-- datatable end -->
                </div>
            </div>
        </div>
    </div>
</div>

@code{
     public PaginationState _paginationState { get; set; } = new PaginationState();
     public PaginationResult<DocumentType> Pagination { get; set; } = new PaginationResult<DocumentType>()
         {
             PageSize = 10,
             PageNumber = 1
         };
     GridItemsProvider<DocumentType>? DoFetchDocumentType;

     protected override Task OnInitializedAsync()
     {
         DoFetchDocumentType = async Req=>
         {
             await DoFetch();
             return GridItemsProviderResult.From<DocumentType>(items: Pagination.Items.ToList(), 
                                                 totalItemCount: Pagination.RecordsCount);
         };
         return base.OnInitializedAsync();
     }

     private async Task DoFetch()
     {
         if (Pagination == null)
             Pagination = new PaginationResult<DocumentType>() { PageSize = 10, PageNumber = 1, Items = new List<DocumentType>() };
         Pagination.PageNumber = _paginationState.CurrentPageIndex+1;
         Pagination = await _DocumentTypeService.GetPaged(Pagination);
         if (Pagination?.Items == null)
            Pagination.Items = Enumerable.Empty<DocumentType>();
         StateHasChanged();
     }
}
