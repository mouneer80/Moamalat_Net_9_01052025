@inherits LocalizationComponent
@namespace Moamalat.Components.Basic
@inject PaymentDataService _PaymentDataService
   
<div class="container">
    <div class="card mb-2 border shadow-0">
        <div class="card-header bg-white">
            <div class="row no-gutters align-items-center">
                <div class="col">
                    <span class="h6 font-weight-bold text-uppercase">Validate Entered Data</span>
                </div>
            </div>
        </div>
        <div class="card-body">

            <EditForm method="post" Model="PaymentDataData" OnValidSubmit="AddPaymentDataData" FormName="create" Enhance>
                <DataAnnotationsValidator />
                @* <ValidationSummary class="text-danger" /> *@
                <div class="row">
                    <div class="col-md-12">
                        <div class="mb-3">
                            <label for="PaymentId" class="form-label">PaymentId:</label>
                            <InputNumber id="PaymentId" @bind-Value="PaymentDataData.PaymentId" class="form-control" />
                            <ValidationMessage For="() => PaymentDataData.PaymentId" class="text-danger" />
                        </div>                        <div class="mb-3">
                            <label for="PaymentDate" class="form-label">PaymentDate:</label>
                            <InputNumber id="PaymentDate" @bind-Value="PaymentDataData.PaymentDate" class="form-control" />
                            <ValidationMessage For="() => PaymentDataData.PaymentDate" class="text-danger" />
                        </div>                        <div class="mb-3">
                            <label for="RequestId" class="form-label">RequestId:</label>
                            <InputNumber id="RequestId" @bind-Value="PaymentDataData.RequestId" class="form-control" />
                            <ValidationMessage For="() => PaymentDataData.RequestId" class="text-danger" />
                        </div>                        <div class="mb-3">
                            <label for="Amount" class="form-label">Amount:</label>
                            <InputNumber id="Amount" @bind-Value="PaymentDataData.Amount" class="form-control" />
                            <ValidationMessage For="() => PaymentDataData.Amount" class="text-danger" />
                        </div>                        <div class="mb-3">
                            <label for="BalanceBefore" class="form-label">BalanceBefore:</label>
                            <InputNumber id="BalanceBefore" @bind-Value="PaymentDataData.BalanceBefore" class="form-control" />
                            <ValidationMessage For="() => PaymentDataData.BalanceBefore" class="text-danger" />
                        </div>                        <div class="mb-3">
                            <label for="BalanceAfter" class="form-label">BalanceAfter:</label>
                            <InputNumber id="BalanceAfter" @bind-Value="PaymentDataData.BalanceAfter" class="form-control" />
                            <ValidationMessage For="() => PaymentDataData.BalanceAfter" class="text-danger" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <button type="submit" class="btn btn-block btn-primary">Create</button>
                    </div>
                </div>

            </EditForm>

        </div>
    </div>

</div>
@code
{
    [SupplyParameterFromForm]
    public PaymentData PaymentDataData { get; set; }

[Parameter]
    public int PaymentId { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        if (PaymentId> 0 )
        {
            PaymentDataData = await _PaymentDataService.GetPaymentDataById(PaymentId);
        }
 }

    protected override void OnInitialized()
    {
        PaymentDataData ??= new();
    }
        //return base.OnParametersSetAsync();
   
    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD

    public async Task AddPaymentDataData()
    {
        await _PaymentDataService.AddPaymentData(PaymentDataData);

         _navigationManager.NavigateTo("/PaymentDataListPage");
    }
}

