@inherits LocalizationComponent
@inject PersonService _PersonService
@namespace Moamalat.Components.Basic
<PageTitle>Person List</PageTitle>


<div class="row">
    <div class="col-xl-12">
        <div id="panel-1" class="panel">
            <div class="panel-hdr">
                <h2>Person List</h2>
                <div class="panel-toolbar">
                    <button class="btn btn-panel waves-effect waves-themed" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
                    <button class="btn btn-panel waves-effect waves-themed" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
                    <button class="btn btn-panel waves-effect waves-themed" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
                </div>
            </div>
            @if (IsLoading)
            {
                <LoadingSpinner/>
            }
            <div class="panel-container show">
                <div class="panel-content">
                    @* <div class="panel-tag">

                    </div> *@
                    <!-- datatable start -->

                    <QuickGrid Class="table"
                               ItemsProvider="DoFetchPerson" Pagination="_paginationState">
                        <PropertyColumn Title="PersonId" Property="w=>w.PersonId" />
                        <PropertyColumn Title="NationalId" Property="w=>w.NationalId" />
                        <PropertyColumn Title="FullArName" Property="w=>w.FullArName" />
                        <PropertyColumn Title="FullEnName" Property="w=>w.FullEnName" />
                        <PropertyColumn Title="Dob" Property="w=>w.Dob" />
                        <PropertyColumn Title="GenderId" Property="w=>w.GenderId" />
                        <PropertyColumn Title="Mobile" Property="w=>w.Mobile" />
                        <PropertyColumn Title="Email" Property="w=>w.Email" />
                        <PropertyColumn Title="Password" Property="w=>w.Password" />
                        <PropertyColumn Title="CurrentBalance" Property="w=>w.CurrentBalance" />
                        <TemplateColumn Context="person">

                            <a class="m-1 p-2" href="">
                                Edit
                            </a>
                            <a class="m-1 p-1">
                                Delete
                            </a>
                        </TemplateColumn>

                    </QuickGrid>
                    <Paginator State="@_paginationState" />                   <!-- datatable end -->
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private bool IsLoading = true;
    public PaginationState _paginationState { get; set; } = new PaginationState();
    public PaginationResult<Person> Pagination { get; set; } = new PaginationResult<Person>()
        {
            PageSize = 10,
            PageNumber = 1
        };
    GridItemsProvider<Person>? DoFetchPerson;

    protected override Task OnInitializedAsync()
    {
        IsLoading = true;
        DoFetchPerson = async Req =>
        {  
            await DoFetch(); 
            return GridItemsProviderResult.From<Person>(items: Pagination.Items.ToList(),
                                                totalItemCount: Pagination.RecordsCount);
        };
        
        return base.OnInitializedAsync();
    }
    private async Task DoFetch()
    {
        
        if (Pagination == null)
            Pagination = new PaginationResult<Person>() { PageSize = 10, PageNumber = 1, Items = new List<Person>() };
        Pagination.PageNumber = _paginationState.CurrentPageIndex + 1;
        Pagination = await _PersonService.GetPaged(Pagination);
        if (Pagination?.Items == null)
            Pagination.Items = Enumerable.Empty<Person>();
        IsLoading = false;


        StateHasChanged();
    }

}
