@inherits LocalizationComponent
@namespace Moamalat.Components.Customer
@inject RequestDataService _RequestDataService
   
<div class="container">
    <div class="card mb-2 border shadow-0">
        <div class="card-header bg-white">
            <div class="row no-gutters align-items-center">
                <div class="col">
                    <span class="h6 font-weight-bold text-uppercase">Validate Entered Data</span>
                </div>
            </div>
        </div>
        <div class="card-body">

            <EditForm method="post" Model="RequestDataData" OnValidSubmit="AddRequestDataData" FormName="create" Enhance>
                <DataAnnotationsValidator />
                @* <ValidationSummary class="text-danger" /> *@
                <div class="row">
                    <div class="col-md-12">
                        <div class="mb-3">
                            <label for="RequestId" class="form-label">RequestId:</label>
                            <InputNumber id="RequestId" @bind-Value="RequestDataData.RequestId" class="form-control" />
                            <ValidationMessage For="() => RequestDataData.RequestId" class="text-danger" />
                        </div>                        <div class="mb-3">
                            <label for="RequestDate" class="form-label">RequestDate:</label>
                            <InputNumber id="RequestDate" @bind-Value="RequestDataData.RequestDate" class="form-control" />
                            <ValidationMessage For="() => RequestDataData.RequestDate" class="text-danger" />
                        </div>                        <div class="mb-3">
                            <label for="PersonId" class="form-label">PersonId:</label>
                            <InputNumber id="PersonId" @bind-Value="RequestDataData.PersonId" class="form-control" />
                            <ValidationMessage For="() => RequestDataData.PersonId" class="text-danger" />
                        </div>                        <div class="mb-3">
                            <label for="CorporateId" class="form-label">CorporateId:</label>
                            <InputNumber id="CorporateId" @bind-Value="RequestDataData.CorporateId" class="form-control" />
                            <ValidationMessage For="() => RequestDataData.CorporateId" class="text-danger" />
                        </div>                        <div class="mb-3">
                            <label for="ServiceId" class="form-label">ServiceId:</label>
                            <InputNumber id="ServiceId" @bind-Value="RequestDataData.ServiceId" class="form-control" />
                            <ValidationMessage For="() => RequestDataData.ServiceId" class="text-danger" />
                        </div>                        <div class="mb-3">
                            <label for="ServiceFees" class="form-label">ServiceFees:</label>
                            <InputNumber id="ServiceFees" @bind-Value="RequestDataData.ServiceFees" class="form-control" />
                            <ValidationMessage For="() => RequestDataData.ServiceFees" class="text-danger" />
                        </div>                        <div class="mb-3">
                            <label for="Createdby" class="form-label">Createdby:</label>
                            <InputNumber id="Createdby" @bind-Value="RequestDataData.Createdby" class="form-control" />
                            <ValidationMessage For="() => RequestDataData.Createdby" class="text-danger" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <button type="submit" class="btn btn-block btn-primary">Create</button>
                    </div>
                </div>

            </EditForm>

        </div>
    </div>

</div>
@code
{
    [SupplyParameterFromForm]
    public RequestData RequestDataData { get; set; }

[Parameter]
    public int RequestId { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        if (RequestId> 0 )
        {
            RequestDataData = await _RequestDataService.GetRequestDataById(RequestId);
        }
 }

    protected override void OnInitialized()
    {
        RequestDataData ??= new();
    }
        //return base.OnParametersSetAsync();
   
    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD

    public async Task AddRequestDataData()
    {
        await _RequestDataService.AddRequestData(RequestDataData);

         _navigationManager.NavigateTo("/RequestDataListPage");
    }
}

